{{
    config(
        materialized='table',
        tags=['valproate'])
}}

SELECT
ID.HX_FLAKE,
DEMOG.PERSON_ID,
DEMOG.SK_PATIENT_ID,
IS_ACTIVE,
IS_DECEASED,
DEMOG.GENDER,
DEMOG.AGE,
AGE_BAND_5Y,
CASE WHEN AGE_BAND_5Y = '0-4' THEN 1
     WHEN AGE_BAND_5Y = '5-9' THEN 2
     WHEN AGE_BAND_5Y = '10-14' THEN 3
     WHEN AGE_BAND_5Y = '15-19' THEN 4
     WHEN AGE_BAND_5Y = '20-24' THEN 5
     WHEN AGE_BAND_5Y = '25-29' THEN 6
     WHEN AGE_BAND_5Y = '30-34' THEN 7
     WHEN AGE_BAND_5Y = '35-39' THEN 8
     WHEN AGE_BAND_5Y = '40-44' THEN 9
     WHEN AGE_BAND_5Y = '45-49' THEN 10
     WHEN AGE_BAND_5Y = '50-54' THEN 11
     WHEN AGE_BAND_5Y = '55-59' THEN 12
        END AS AGE_BAND_5Y_ORDER,
AGE_BAND_10Y,
CASE WHEN AGE_BAND_5Y = '0-9' THEN 1
     WHEN AGE_BAND_5Y = '10-19' THEN 2
     WHEN AGE_BAND_5Y = '20-29' THEN 3
     WHEN AGE_BAND_5Y = '30-39' THEN 4
     WHEN AGE_BAND_5Y = '40-49' THEN 5
     WHEN AGE_BAND_5Y = '50-55' THEN 6
        END AS AGE_BAND_10Y_ORDER,
ETHNICITY_CATEGORY,
ETHNICITY_SUBCATEGORY,
ETHNICITY_GRANULAR,
MAIN_LANGUAGE,
INTERPRETER_NEEDED,
PRACTICE_CODE,
PRACTICE_NAME,
PCN_CODE,
PCN_NAME,
PCN_NAME_WITH_BOROUGH,
NEIGHBOURHOOD_REGISTERED,
BOROUGH_REGISTERED,
LSOA_CODE_21 AS PATIENT_LSOA,
LSOA_NAME_21 AS PATIENT_LSOA_NAME,
PRACTICE_LSOA,
WARD_CODE,
WARD_NAME,
IMD_DECILE_19,
CASE WHEN IMD_QUINTILE_19 IS NULL THEN 'Unknown' ELSE IMD_QUINTILE_19 END AS PATIENT_IMD_QUINTILE_19,
CASE WHEN IMD_QUINTILE_19 = 'Least Deprived' THEN 1
        WHEN IMD_QUINTILE_19 = 'Second Least Deprived' THEN 2
        WHEN IMD_QUINTILE_19 = 'Third Most Deprived' THEN 3
        WHEN IMD_QUINTILE_19 = 'Second Most Deprived' THEN 4
        WHEN IMD_QUINTILE_19 = 'Most Deprived' THEN 5
            ELSE 6
                END AS PATIENT_IMD_QUINTILE_19_SORT_KEY,
CASE WHEN DEMOG.AGE <7 THEN '0 - 6'
      WHEN DEMOG.AGE BETWEEN 7 AND 12 THEN '7 - 12'
      WHEN DEMOG.AGE BETWEEN 13 AND 55 THEN '13 - 55'
        END AS AGE_GROUP,
SV.MOST_RECENT_VALPROATE_ORDER_DATE AS DATE_OF_LAST_VALPROATE_ISSUE,
PPP.CURRENT_PPP_STATUS_DESCRIPTION,
COALESCE(PPP.CURRENT_PPP_STATUS_WITH_DATE,'No - No entry found') AS PREGNANCY_PREVENTION_PROGRAMME_ENROLMENT_STATUS ,
COALESCE(PPP.CURRENT_PPP_STATUS_DESCRIPTION,'No - No entry found') AS PREGNANCY_PREVENTION_PROGRAMME_DESC,
CASE WHEN array_contains(to_variant('1366401000000107'),ARAF.ALL_ARAF_CONCEPT_CODES) THEN 1 ELSE 0 END AS OLD_ANNUAL_RISK_ACKNOWLEDGEMENT_FORM,
CASE WHEN HAS_NEW_ANNUAL_RISK_ACKNOWLEDGEMENT_FORM = TRUE THEN 1 ELSE 0 END AS NEW_ANNUAL_RISK_ACKNOWLEDGEMENT_FORM,
CASE WHEN array_contains(to_variant('1366401000000107'),ARAF.ALL_ARAF_CONCEPT_CODES) THEN 'Yes ('|| CAST(to_char(LATEST_SPECIFIC_ARAF_FORM_DATE,'DD/MM/YYYY') AS VARCHAR(100)) ||')' ELSE 'No' END AS ARAF_COMPLETED_IN_12_MONTHS,
CASE WHEN array_contains(to_variant('2078951000000106'),ARAF.ALL_ARAF_CONCEPT_CODES) THEN 'Yes ('|| CAST(LATEST_SPECIFIC_ARAF_FORM_DATE AS VARCHAR(100)) ||')' ELSE 'No' END AS NEW_ANNUAL_RISK_ACKNOWLEDGEMENT_FORM_INFO,
MAX(CASE WHEN array_contains(to_variant('2078951000000106'),ARAF.ALL_ARAF_CONCEPT_CODES) THEN split_part(CAST(LATEST_SPECIFIC_ARAF_FORM_DATE as varchar), '-', 3) || '/' || split_part(CAST(LATEST_SPECIFIC_ARAF_FORM_DATE as varchar), '-', 2) || '/' ||split_part(CAST(LATEST_SPECIFIC_ARAF_FORM_DATE as varchar), '-', 1) END) AS NEW_ARAF_DATE,
CASE WHEN array_contains(to_variant('1366401000000107'),ARAF.ALL_ARAF_CONCEPT_CODES) THEN 'Yes ('|| CAST(LATEST_SPECIFIC_ARAF_FORM_DATE AS VARCHAR(50)) ||')' ELSE 'No' END AS LATEST_ARAF_INFO,
LATEST_SPECIFIC_ARAF_FORM_DATE AS LATEST_ARAF_DATE,
CASE WHEN P.HAS_PERMANENT_ABSENCE_PREG_RISK_FLAG = TRUE THEN 1 ELSE 0 END AS HAS_PERMANENT_ABSENCE_PREG_RISK_FLAG,
CASE WHEN LD.IS_ON_REGISTER = TRUE THEN 1 ELSE 0 END AS LEARNING_DISABILTY,
CASE WHEN ST.HAS_PREGNANCY = TRUE THEN 1 ELSE 0 END AS PREGNANCY,
ST.RISK_OF_PREGNANCY,
ST.ACTION,
CASE WHEN ST.ACTION = 'No action required' THEN 'Very low risk'
     WHEN ST.ACTION = 'Consider expiry of ARAF' THEN 'Low risk'
     WHEN ST.ACTION = 'Keep under review' THEN 'Medium risk'
     WHEN ST.ACTION = 'Review or refer' THEN 'High risk'
        END AS RISK_GROUP,
 CASE WHEN ST.ACTION = 'No action required' THEN 4
     WHEN ST.ACTION = 'Consider expiry of ARAF' THEN 3
     WHEN ST.ACTION = 'Keep under review' THEN 2
     WHEN ST.ACTION = 'Review or refer' THEN 1
        END AS RISK_GROUP_ORDER,       
CASE WHEN ST.HAS_PREGNANCY = TRUE THEN 1
        WHEN DEMOG.AGE BETWEEN 0 AND 6 OR P.HAS_PERMANENT_ABSENCE_PREG_RISK_FLAG = TRUE THEN 9
        WHEN PPP.CURRENT_PPP_STATUS_DESCRIPTION IN ('No - PPP discontinued','No - PPP not needed','No - PPP declined') THEN 5
        WHEN PPP.CURRENT_PPP_STATUS_DESCRIPTION = 'No - No entry found' OR (ARAF.HAS_ARAF_EVENT = FALSE AND LD.IS_ON_REGISTER = TRUE) THEN 2
        WHEN PPP.CURRENT_PPP_STATUS_DESCRIPTION = 'No - No entry found' OR (ARAF.HAS_ARAF_EVENT = FALSE AND DEMOG.AGE BETWEEN 13 AND 60) THEN 3
        WHEN PPP.CURRENT_PPP_STATUS_DESCRIPTION = 'No - No entry found' OR (ARAF.HAS_ARAF_EVENT = FALSE AND DEMOG.AGE BETWEEN 7 AND 12) THEN 4
        WHEN PPP.IS_CURRENTLY_PPP_ENROLLED = TRUE AND ARAF.HAS_ARAF_EVENT = TRUE AND DEMOG.AGE BETWEEN 7 AND 60 AND LD.IS_ON_REGISTER = TRUE THEN 6
        WHEN PPP.IS_CURRENTLY_PPP_ENROLLED = TRUE AND ARAF.HAS_ARAF_EVENT = TRUE AND DEMOG.AGE BETWEEN 7 AND 12 THEN 7
        WHEN PPP.IS_CURRENTLY_PPP_ENROLLED = TRUE AND ARAF.HAS_ARAF_EVENT = TRUE AND DEMOG.AGE BETWEEN 13 AND 60 THEN 8
            ELSE 0
                END AS ACTION_ORDER,
CASE WHEN P.IS_CURRENTLY_PREGNANT = TRUE THEN 'Pregnancy' ELSE '***' END AS GRP_1,
CASE WHEN LD.IS_ON_REGISTER = TRUE THEN 'Learning Disability' ELSE '***' END AS GRP_2,
CASE WHEN ST.HAS_NEUROLOGY = TRUE THEN 'Neurology' ELSE '***' END AS GRP_3,
CASE WHEN ST.HAS_PSYCHIATRY = TRUE THEN 'Psychiatry' ELSE '***' END AS GRP_4,
CASE WHEN LATEST_SPECIFIC_ARAF_FORM_DATE IS NOT NULL THEN DATEDIFF(MONTH,LATEST_SPECIFIC_ARAF_FORM_DATE,CURRENT_DATE()) END AS DIFF_MONTHS,
CASE WHEN P.IS_CURRENTLY_PREGNANT = FALSE AND LD.IS_ON_REGISTER = FALSE THEN ''
     WHEN P.IS_CURRENTLY_PREGNANT = TRUE AND LD.IS_ON_REGISTER = TRUE THEN 'Pregnancy, Learning Disability'
     WHEN P.IS_CURRENTLY_PREGNANT = TRUE THEN 'Pregnancy'
     WHEN LD.IS_ON_REGISTER = TRUE THEN 'Learning Disability' END AS ADDITIONAL_FINDINGS,
CASE WHEN ST.HAS_NEUROLOGY = FALSE AND ST.HAS_PSYCHIATRY = FALSE THEN ''
        WHEN ST.HAS_NEUROLOGY = TRUE AND ST.HAS_PSYCHIATRY = TRUE THEN 'Neurology, Psychiatry'
        WHEN ST.HAS_NEUROLOGY = TRUE THEN 'Neurology'
        WHEN ST.HAS_PSYCHIATRY = TRUE THEN 'Psychiatry' END AS SPECIALTY,
CASE WHEN OPT.PERSON_ID IS NULL THEN 'No' ELSE 'Yes' END AS IS_OPTED_OUT

--FROM REPORTING.OLIDS_PERSON_DEMOGRAPHICS.DIM_PERSON_DEMOGRAPHICS  AS DEMOG
FROM {{ ref('dim_person_demographics') }} AS DEMOG

--INNER JOIN REPORTING.OLIDS_PROGRAMME.DIM_VALPROATE_DB_SCOPE AS SV
INNER JOIN {{ ref('dim_valproate_db_scope') }} AS SV
           ON DEMOG.PERSON_ID = SV.PERSON_ID

--LEFT JOIN PUBLISHED_REPORTING__DIRECT_CARE.OLIDS_PUBLISHED.PERSON_PSEUDO ID
LEFT JOIN {{ ref('person_pseudo') }} AS ID
          ON DEMOG.PERSON_ID = ID.PERSON_ID
          
--LEFT join REPORTING.OLIDS_PROGRAMME.DIM_VALPROATE_PPP_STATUS AS PPP
LEFT JOIN {{ ref('dim_valproate_ppp_status') }} AS PPP
          ON DEMOG.PERSON_ID = PPP.PERSON_ID

--LEFT JOIN REPORTING.OLIDS_PROGRAMME.DIM_VALPROATE_ARAF AS ARAF     
LEFT JOIN {{ ref('dim_valproate_araf') }} AS ARAF
          ON DEMOG.PERSON_ID = ARAF.PERSON_ID
     
--LEFT JOIN REPORTING.OLIDS_PERSON_STATUS.FCT_PERSON_PREGNANCY_STATUS AS P    
LEFT JOIN {{ ref('fct_person_pregnancy_status') }} AS P 
          ON DEMOG.PERSON_ID = P.PERSON_ID

--LEFT JOIN REPORTING.OLIDS_DISEASE_REGISTERS.FCT_PERSON_LEARNING_DISABILITY_REGISTER LD
LEFT JOIN {{ ref('fct_person_learning_disability_register') }} AS LD
          ON DEMOG.PERSON_ID = LD.PERSON_ID

--LEFT JOIN REPORTING.OLIDS_PROGRAMME.DIM_VALPROATE_ACTION_STATUS ST
LEFT JOIN {{ ref('dim_valproate_action_status') }} AS ST
          ON DEMOG.PERSON_ID = ST.PERSON_ID

--LEFT JOIN REPORTING.OLIDS_PROGRAMME.DIM_PERSON_OPT_OUT_TYPE_1_STATUS  OPT
LEFT JOIN {{ ref('dim_person_opt_out_type_1_status') }} AS OPT
          ON DEMOG.PERSON_ID = OPT.PERSON_ID
        
WHERE (
      DEMOG.GENDER = 'Unknown'
      OR
      DEMOG.GENDER != 'Male' -- Changed to be "Not Male" rather than the previous list
      )
      AND
      DEMOG.AGE BETWEEN 0 AND 55

group by all