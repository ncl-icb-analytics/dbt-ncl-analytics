#!/bin/bash
# Generates a historical CHANGELOG.md from v1.0.0 to current HEAD

set -e

V1_COMMIT="8f99af1"
OUTPUT_FILE="CHANGELOG.md"

echo "# Changelog" > $OUTPUT_FILE
echo "" >> $OUTPUT_FILE
echo "All notable changes to this project are documented in this file." >> $OUTPUT_FILE
echo "" >> $OUTPUT_FILE
echo "The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)," >> $OUTPUT_FILE
echo "and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html)." >> $OUTPUT_FILE
echo "" >> $OUTPUT_FILE
echo "This changelog is automatically generated by [release-please](https://github.com/googleapis/release-please) based on [Conventional Commits](https://www.conventionalcommits.org/)." >> $OUTPUT_FILE
echo "" >> $OUTPUT_FILE

# Read versions from tags (newest first)
TAGS=$(git tag -l "v*" --sort=-version:refname)

for tag in $TAGS; do
    # Get tag date and contributors
    TAG_DATE=$(git log -1 --format=%ai $tag | cut -d' ' -f1)

    # Get commit range for this version
    PREV_TAG=$(git describe --tags --abbrev=0 $tag^ 2>/dev/null || echo "$V1_COMMIT")

    # Get unique contributors - prefer usernames (no spaces) over full names
    CONTRIBUTORS=$(git log --format="%aN" ${PREV_TAG}..${tag} | sort -u | grep -v " " | paste -sd ", " -)

    # If no usernames, use full names as fallback
    if [ -z "$CONTRIBUTORS" ]; then
        CONTRIBUTORS=$(git log --format="%aN" ${PREV_TAG}..${tag} | sort -u | paste -sd ", " -)
    fi

    # Extract PR number from merge commit if exists
    PR_NUMBER=$(git log --merges --format="%s" ${PREV_TAG}..${tag} | grep -oP "#\d+" | head -1 | tr -d '#' || echo "")

    echo "## [$tag] - $TAG_DATE" >> $OUTPUT_FILE
    echo "" >> $OUTPUT_FILE

    # Add PR link and contributors on same line
    if [ -n "$PR_NUMBER" ] && [ -n "$CONTRIBUTORS" ]; then
        echo "[#${PR_NUMBER}](https://github.com/ncl-icb-analytics/dbt-ncl-analytics/pull/${PR_NUMBER}) Â· _${CONTRIBUTORS}_" >> $OUTPUT_FILE
        echo "" >> $OUTPUT_FILE
    elif [ -n "$PR_NUMBER" ]; then
        echo "[#${PR_NUMBER}](https://github.com/ncl-icb-analytics/dbt-ncl-analytics/pull/${PR_NUMBER})" >> $OUTPUT_FILE
        echo "" >> $OUTPUT_FILE
    elif [ -n "$CONTRIBUTORS" ]; then
        echo "_Contributors: ${CONTRIBUTORS}_" >> $OUTPUT_FILE
        echo "" >> $OUTPUT_FILE
    fi

    # Get all non-merge commits
    FEATURES=$(git log --format="%s" --no-merges ${PREV_TAG}..${tag} | grep -iE "^feat(\(|:)" || true)
    FIXES=$(git log --format="%s" --no-merges ${PREV_TAG}..${tag} | grep -iE "^fix(\(|:)" || true)
    REFACTORS=$(git log --format="%s" --no-merges ${PREV_TAG}..${tag} | grep -iE "^refactor(\(|:)" || true)
    DOCS=$(git log --format="%s" --no-merges ${PREV_TAG}..${tag} | grep -iE "^docs(\(|:)" || true)
    OTHER=$(git log --format="%s" --no-merges ${PREV_TAG}..${tag} | grep -viE "^(feat|fix|refactor|docs)(\(|:)" | grep -v "^Merge" || true)

    # Output features
    if [ -n "$FEATURES" ]; then
        echo "### Added" >> $OUTPUT_FILE
        echo "" >> $OUTPUT_FILE
        echo "$FEATURES" | while read -r line; do
            echo "- $line" >> $OUTPUT_FILE
        done
        echo "" >> $OUTPUT_FILE
    fi

    # Output fixes
    if [ -n "$FIXES" ]; then
        echo "### Fixed" >> $OUTPUT_FILE
        echo "" >> $OUTPUT_FILE
        echo "$FIXES" | while read -r line; do
            echo "- $line" >> $OUTPUT_FILE
        done
        echo "" >> $OUTPUT_FILE
    fi

    # Output refactors
    if [ -n "$REFACTORS" ]; then
        echo "### Changed" >> $OUTPUT_FILE
        echo "" >> $OUTPUT_FILE
        echo "$REFACTORS" | while read -r line; do
            echo "- $line" >> $OUTPUT_FILE
        done
        echo "" >> $OUTPUT_FILE
    fi

    # Output docs
    if [ -n "$DOCS" ]; then
        echo "### Changed" >> $OUTPUT_FILE
        echo "" >> $OUTPUT_FILE
        echo "$DOCS" | while read -r line; do
            echo "- $line" >> $OUTPUT_FILE
        done
        echo "" >> $OUTPUT_FILE
    fi

    # Output other changes
    if [ -n "$OTHER" ]; then
        echo "### Changed" >> $OUTPUT_FILE
        echo "" >> $OUTPUT_FILE
        echo "$OTHER" | while read -r line; do
            echo "- $line" >> $OUTPUT_FILE
        done
        echo "" >> $OUTPUT_FILE
    fi

    # Get model file changes
    MODEL_CHANGES=$(git diff --name-status ${PREV_TAG}..${tag} -- models/**/*.sql)

    if [ -n "$MODEL_CHANGES" ]; then
        echo "### Models Changed" >> $OUTPUT_FILE
        echo "" >> $OUTPUT_FILE

        # Show added models
        ADDED_MODELS=$(echo "$MODEL_CHANGES" | grep "^A" | cut -f2 || true)
        if [ -n "$ADDED_MODELS" ]; then
            ADDED_COUNT=$(echo "$ADDED_MODELS" | wc -l)
            echo "#### Added ($ADDED_COUNT)" >> $OUTPUT_FILE
            echo "" >> $OUTPUT_FILE
            echo "$ADDED_MODELS" | while read -r file; do
                echo "- \`$file\`" >> $OUTPUT_FILE
            done
            echo "" >> $OUTPUT_FILE
        fi

        # Show modified models
        MODIFIED_MODELS=$(echo "$MODEL_CHANGES" | grep "^M" | cut -f2 || true)
        if [ -n "$MODIFIED_MODELS" ]; then
            MODIFIED_COUNT=$(echo "$MODIFIED_MODELS" | wc -l)
            echo "#### Modified ($MODIFIED_COUNT)" >> $OUTPUT_FILE
            echo "" >> $OUTPUT_FILE
            echo "$MODIFIED_MODELS" | while read -r file; do
                echo "- \`$file\`" >> $OUTPUT_FILE
            done
            echo "" >> $OUTPUT_FILE
        fi

        # Show deleted models
        DELETED_MODELS=$(echo "$MODEL_CHANGES" | grep "^D" | cut -f2 || true)
        if [ -n "$DELETED_MODELS" ]; then
            DELETED_COUNT=$(echo "$DELETED_MODELS" | wc -l)
            echo "#### Removed ($DELETED_COUNT)" >> $OUTPUT_FILE
            echo "" >> $OUTPUT_FILE
            echo "$DELETED_MODELS" | while read -r file; do
                echo "- \`$file\`" >> $OUTPUT_FILE
            done
            echo "" >> $OUTPUT_FILE
        fi
    fi
done

echo "CHANGELOG.md generated successfully!"
